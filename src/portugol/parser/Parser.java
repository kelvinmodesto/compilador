/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.parser;

import portugol.lexer.*;
import portugol.node.*;
import portugol.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce APrograma */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce ACabecalho */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce ADeclaracaoDeclaracoes */
            {
                ArrayList<Object> list = new2();
                push(goTo(2), list, false);
            }
            break;
            case 3: /* reduce ADeclaracoesDeclaracoes */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce AVarDeclaracaoDeclaracao */
            {
                ArrayList<Object> list = new4();
                push(goTo(3), list, false);
            }
            break;
            case 5: /* reduce AConstDeclaracaoDeclaracao */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list, false);
            }
            break;
            case 6: /* reduce AAvardeclaracao1VarDeclaracao */
            {
                ArrayList<Object> list = new6();
                push(goTo(4), list, false);
            }
            break;
            case 7: /* reduce AAvardeclaracao2VarDeclaracao */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list, false);
            }
            break;
            case 8: /* reduce ARealTipo */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list, false);
            }
            break;
            case 9: /* reduce AInteiroTipo */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list, false);
            }
            break;
            case 10: /* reduce ACaractereTipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(5), list, false);
            }
            break;
            case 11: /* reduce AMaisVars */
            {
                ArrayList<Object> list = new11();
                push(goTo(6), list, false);
            }
            break;
            case 12: /* reduce ASimplesVar */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list, false);
            }
            break;
            case 13: /* reduce AVetorVar */
            {
                ArrayList<Object> list = new13();
                push(goTo(7), list, false);
            }
            break;
            case 14: /* reduce AConstDeclaracao */
            {
                ArrayList<Object> list = new14();
                push(goTo(8), list, false);
            }
            break;
            case 15: /* reduce AStringValor */
            {
                ArrayList<Object> list = new15();
                push(goTo(9), list, false);
            }
            break;
            case 16: /* reduce ARealValor */
            {
                ArrayList<Object> list = new16();
                push(goTo(9), list, false);
            }
            break;
            case 17: /* reduce AInteiroValor */
            {
                ArrayList<Object> list = new17();
                push(goTo(9), list, false);
            }
            break;
            case 18: /* reduce AComandoComandos */
            {
                ArrayList<Object> list = new18();
                push(goTo(10), list, false);
            }
            break;
            case 19: /* reduce AComandosComandos */
            {
                ArrayList<Object> list = new19();
                push(goTo(10), list, false);
            }
            break;
            case 20: /* reduce ALeiaComando */
            {
                ArrayList<Object> list = new20();
                push(goTo(11), list, false);
            }
            break;
            case 21: /* reduce AEscrevaComando */
            {
                ArrayList<Object> list = new21();
                push(goTo(11), list, false);
            }
            break;
            case 22: /* reduce AAtribuicaoComando */
            {
                ArrayList<Object> list = new22();
                push(goTo(11), list, false);
            }
            break;
            case 23: /* reduce ASeComando */
            {
                ArrayList<Object> list = new23();
                push(goTo(11), list, false);
            }
            break;
            case 24: /* reduce AAavaliecomando1Comando */
            {
                ArrayList<Object> list = new24();
                push(goTo(11), list, false);
            }
            break;
            case 25: /* reduce AAavaliecomando2Comando */
            {
                ArrayList<Object> list = new25();
                push(goTo(11), list, false);
            }
            break;
            case 26: /* reduce AEnquantoComando */
            {
                ArrayList<Object> list = new26();
                push(goTo(11), list, false);
            }
            break;
            case 27: /* reduce ARepitaComando */
            {
                ArrayList<Object> list = new27();
                push(goTo(11), list, false);
            }
            break;
            case 28: /* reduce AParaComando */
            {
                ArrayList<Object> list = new28();
                push(goTo(11), list, false);
            }
            break;
            case 29: /* reduce AParaPassoComando */
            {
                ArrayList<Object> list = new29();
                push(goTo(11), list, false);
            }
            break;
            case 30: /* reduce AVazioSeSenao */
            {
                ArrayList<Object> list = new30();
                push(goTo(12), list, false);
            }
            break;
            case 31: /* reduce ASenaoSeSenao */
            {
                ArrayList<Object> list = new31();
                push(goTo(12), list, false);
            }
            break;
            case 32: /* reduce ACasoCaso */
            {
                ArrayList<Object> list = new32();
                push(goTo(13), list, false);
            }
            break;
            case 33: /* reduce AVazioCasoSenao */
            {
                ArrayList<Object> list = new33();
                push(goTo(14), list, false);
            }
            break;
            case 34: /* reduce ASenaoCasoSenao */
            {
                ArrayList<Object> list = new34();
                push(goTo(14), list, false);
            }
            break;
            case 35: /* reduce AAtribuicao */
            {
                ArrayList<Object> list = new35();
                push(goTo(15), list, false);
            }
            break;
            case 36: /* reduce AAleia1Leia */
            {
                ArrayList<Object> list = new36();
                push(goTo(16), list, false);
            }
            break;
            case 37: /* reduce AAleia2Leia */
            {
                ArrayList<Object> list = new37();
                push(goTo(16), list, false);
            }
            break;
            case 38: /* reduce AAescreva1Escreva */
            {
                ArrayList<Object> list = new38();
                push(goTo(17), list, false);
            }
            break;
            case 39: /* reduce AAescreva2Escreva */
            {
                ArrayList<Object> list = new39();
                push(goTo(17), list, false);
            }
            break;
            case 40: /* reduce AMaisExpressao */
            {
                ArrayList<Object> list = new40();
                push(goTo(18), list, false);
            }
            break;
            case 41: /* reduce ATermoExpressao */
            {
                ArrayList<Object> list = new41();
                push(goTo(19), list, false);
            }
            break;
            case 42: /* reduce ASomaExpressao */
            {
                ArrayList<Object> list = new42();
                push(goTo(19), list, false);
            }
            break;
            case 43: /* reduce ASubExpressao */
            {
                ArrayList<Object> list = new43();
                push(goTo(19), list, false);
            }
            break;
            case 44: /* reduce AFatorTermo */
            {
                ArrayList<Object> list = new44();
                push(goTo(20), list, false);
            }
            break;
            case 45: /* reduce AMultTermo */
            {
                ArrayList<Object> list = new45();
                push(goTo(20), list, false);
            }
            break;
            case 46: /* reduce ADivTermo */
            {
                ArrayList<Object> list = new46();
                push(goTo(20), list, false);
            }
            break;
            case 47: /* reduce AIdFator */
            {
                ArrayList<Object> list = new47();
                push(goTo(21), list, false);
            }
            break;
            case 48: /* reduce AInteiroFator */
            {
                ArrayList<Object> list = new48();
                push(goTo(21), list, false);
            }
            break;
            case 49: /* reduce ARealFator */
            {
                ArrayList<Object> list = new49();
                push(goTo(21), list, false);
            }
            break;
            case 50: /* reduce AParentesesFator */
            {
                ArrayList<Object> list = new50();
                push(goTo(21), list, false);
            }
            break;
            case 51: /* reduce AExpLogicaExpressaoLogica */
            {
                ArrayList<Object> list = new51();
                push(goTo(22), list, false);
            }
            break;
            case 52: /* reduce AEExpLogicaExpressaoLogica */
            {
                ArrayList<Object> list = new52();
                push(goTo(22), list, false);
            }
            break;
            case 53: /* reduce AOuExpLogicaExpressaoLogica */
            {
                ArrayList<Object> list = new53();
                push(goTo(22), list, false);
            }
            break;
            case 54: /* reduce AXorExpLogicaExpressaoLogica */
            {
                ArrayList<Object> list = new54();
                push(goTo(22), list, false);
            }
            break;
            case 55: /* reduce AExpLogicaExpsLogicas */
            {
                ArrayList<Object> list = new55();
                push(goTo(23), list, false);
            }
            break;
            case 56: /* reduce ANaoExpLogicaExpsLogicas */
            {
                ArrayList<Object> list = new56();
                push(goTo(23), list, false);
            }
            break;
            case 57: /* reduce AIgualExpLogica */
            {
                ArrayList<Object> list = new57();
                push(goTo(24), list, false);
            }
            break;
            case 58: /* reduce ADifExpLogica */
            {
                ArrayList<Object> list = new58();
                push(goTo(24), list, false);
            }
            break;
            case 59: /* reduce AMenorIgualExpLogica */
            {
                ArrayList<Object> list = new59();
                push(goTo(24), list, false);
            }
            break;
            case 60: /* reduce AMaiorIgualExpLogica */
            {
                ArrayList<Object> list = new60();
                push(goTo(24), list, false);
            }
            break;
            case 61: /* reduce AMenorExpLogica */
            {
                ArrayList<Object> list = new61();
                push(goTo(24), list, false);
            }
            break;
            case 62: /* reduce AMaiorExpLogica */
            {
                ArrayList<Object> list = new62();
                push(goTo(24), list, false);
            }
            break;
            case 63: /* reduce AParentesesExpLogica */
            {
                ArrayList<Object> list = new63();
                push(goTo(24), list, false);
            }
            break;
            case 64: /* reduce ATerminal$MaisVars */
            {
                ArrayList<Object> list = new64();
                push(goTo(25), list, true);
            }
            break;
            case 65: /* reduce ANonTerminal$MaisVars */
            {
                ArrayList<Object> list = new65();
                push(goTo(25), list, true);
            }
            break;
            case 66: /* reduce ATerminal$Caso */
            {
                ArrayList<Object> list = new66();
                push(goTo(26), list, true);
            }
            break;
            case 67: /* reduce ANonTerminal$Caso */
            {
                ArrayList<Object> list = new67();
                push(goTo(26), list, true);
            }
            break;
            case 68: /* reduce ATerminal$MaisExpressao */
            {
                ArrayList<Object> list = new68();
                push(goTo(27), list, true);
            }
            break;
            case 69: /* reduce ANonTerminal$MaisExpressao */
            {
                ArrayList<Object> list = new69();
                push(goTo(27), list, true);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce APrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PCabecalho pcabecalhoNode2;
        PDeclaracoes pdeclaracoesNode3;
        PComandos pcomandosNode4;
        TCFim tcfimNode5;
        TPonto tpontoNode6;
        pcabecalhoNode2 = (PCabecalho)nodeArrayList1.get(0);
        pdeclaracoesNode3 = (PDeclaracoes)nodeArrayList2.get(0);
        pcomandosNode4 = (PComandos)nodeArrayList3.get(0);
        tcfimNode5 = (TCFim)nodeArrayList4.get(0);
        tpontoNode6 = (TPonto)nodeArrayList5.get(0);

        pprogramaNode1 = new APrograma(pcabecalhoNode2, pdeclaracoesNode3, pcomandosNode4, tcfimNode5, tpontoNode6);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce ACabecalho */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCabecalho pcabecalhoNode1;
        {
            // Block
        TCPrograma tcprogramaNode2;
        TId tidNode3;
        TCInicio tcinicioNode4;
        tcprogramaNode2 = (TCPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tcinicioNode4 = (TCInicio)nodeArrayList3.get(0);

        pcabecalhoNode1 = new ACabecalho(tcprogramaNode2, tidNode3, tcinicioNode4);
        }
	nodeList.add(pcabecalhoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce ADeclaracaoDeclaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoes pdeclaracoesNode1;
        {
            // Block
        PDeclaracao pdeclaracaoNode2;
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList1.get(0);

        pdeclaracoesNode1 = new ADeclaracaoDeclaracoes(pdeclaracaoNode2);
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce ADeclaracoesDeclaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoes pdeclaracoesNode1;
        {
            // Block
        PDeclaracoes pdeclaracoesNode2;
        PDeclaracao pdeclaracaoNode3;
        pdeclaracoesNode2 = (PDeclaracoes)nodeArrayList1.get(0);
        pdeclaracaoNode3 = (PDeclaracao)nodeArrayList2.get(0);

        pdeclaracoesNode1 = new ADeclaracoesDeclaracoes(pdeclaracoesNode2, pdeclaracaoNode3);
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AVarDeclaracaoDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PVarDeclaracao pvardeclaracaoNode2;
        pvardeclaracaoNode2 = (PVarDeclaracao)nodeArrayList1.get(0);

        pdeclaracaoNode1 = new AVarDeclaracaoDeclaracao(pvardeclaracaoNode2);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AConstDeclaracaoDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PConstDeclaracao pconstdeclaracaoNode2;
        pconstdeclaracaoNode2 = (PConstDeclaracao)nodeArrayList1.get(0);

        pdeclaracaoNode1 = new AConstDeclaracaoDeclaracao(pconstdeclaracaoNode2);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AAvardeclaracao1VarDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarDeclaracao pvardeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPontos tdoispontosNode3;
        PVar pvarNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TPontoVirgula tpontovirgulaNode6;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pvarNode4 = (PVar)nodeArrayList3.get(0);
        {
            // Block
        }
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList4.get(0);

        pvardeclaracaoNode1 = new AVarDeclaracao(ptipoNode2, tdoispontosNode3, pvarNode4, listNode5, tpontovirgulaNode6);
        }
	nodeList.add(pvardeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AAvardeclaracao2VarDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarDeclaracao pvardeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPontos tdoispontosNode3;
        PVar pvarNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TPontoVirgula tpontovirgulaNode7;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pvarNode4 = (PVar)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList5.get(0);

        pvardeclaracaoNode1 = new AVarDeclaracao(ptipoNode2, tdoispontosNode3, pvarNode4, listNode6, tpontovirgulaNode7);
        }
	nodeList.add(pvardeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ARealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCReal tcrealNode2;
        tcrealNode2 = (TCReal)nodeArrayList1.get(0);

        ptipoNode1 = new ARealTipo(tcrealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AInteiroTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCInteiro tcinteiroNode2;
        tcinteiroNode2 = (TCInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AInteiroTipo(tcinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ACaractereTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCCaractere tccaractereNode2;
        tccaractereNode2 = (TCCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACaractereTipo(tccaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AMaisVars */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMaisVars pmaisvarsNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PVar pvarNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);

        pmaisvarsNode1 = new AMaisVars(tvirgulaNode2, pvarNode3);
        }
	nodeList.add(pmaisvarsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ASimplesVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pvarNode1 = new ASimplesVar(tidNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AVetorVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        TACol tacolNode3;
        TInteiro tinteiroNode4;
        TFCol tfcolNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tacolNode3 = (TACol)nodeArrayList2.get(0);
        tinteiroNode4 = (TInteiro)nodeArrayList3.get(0);
        tfcolNode5 = (TFCol)nodeArrayList4.get(0);

        pvarNode1 = new AVetorVar(tidNode2, tacolNode3, tinteiroNode4, tfcolNode5);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AConstDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstDeclaracao pconstdeclaracaoNode1;
        {
            // Block
        TCConst tcconstNode2;
        TId tidNode3;
        PValor pvalorNode4;
        TPontoVirgula tpontovirgulaNode5;
        tcconstNode2 = (TCConst)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pconstdeclaracaoNode1 = new AConstDeclaracao(tcconstNode2, tidNode3, pvalorNode4, tpontovirgulaNode5);
        }
	nodeList.add(pconstdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AStringValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStringValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce ARealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        pvalorNode1 = new ARealValor(trealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AInteiroValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        pvalorNode1 = new AInteiroValor(tinteiroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AComandoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComando pcomandoNode2;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);

        pcomandosNode1 = new AComandoComandos(pcomandoNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AComandosComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PComando pcomandoNode3;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandosNode1 = new AComandosComandos(pcomandosNode2, pcomandoNode3);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ALeiaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PLeia pleiaNode2;
        pleiaNode2 = (PLeia)nodeArrayList1.get(0);

        pcomandoNode1 = new ALeiaComando(pleiaNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AEscrevaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PEscreva pescrevaNode2;
        pescrevaNode2 = (PEscreva)nodeArrayList1.get(0);

        pcomandoNode1 = new AEscrevaComando(pescrevaNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AAtribuicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PAtribuicao patribuicaoNode2;
        patribuicaoNode2 = (PAtribuicao)nodeArrayList1.get(0);

        pcomandoNode1 = new AAtribuicaoComando(patribuicaoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce ASeComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TCSe tcseNode2;
        TAPar taparNode3;
        PExpressaoLogica pexpressaologicaNode4;
        TFPar tfparNode5;
        TCEntao tcentaoNode6;
        PComandos pcomandosNode7;
        PSeSenao psesenaoNode8;
        TCFimSe tcfimseNode9;
        TPontoVirgula tpontovirgulaNode10;
        tcseNode2 = (TCSe)nodeArrayList1.get(0);
        taparNode3 = (TAPar)nodeArrayList2.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList3.get(0);
        tfparNode5 = (TFPar)nodeArrayList4.get(0);
        tcentaoNode6 = (TCEntao)nodeArrayList5.get(0);
        pcomandosNode7 = (PComandos)nodeArrayList6.get(0);
        psesenaoNode8 = (PSeSenao)nodeArrayList7.get(0);
        tcfimseNode9 = (TCFimSe)nodeArrayList8.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList9.get(0);

        pcomandoNode1 = new ASeComando(tcseNode2, taparNode3, pexpressaologicaNode4, tfparNode5, tcentaoNode6, pcomandosNode7, psesenaoNode8, tcfimseNode9, tpontovirgulaNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAavaliecomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TCAvalie tcavalieNode2;
        TAPar taparNode3;
        PExpressao pexpressaoNode4;
        TFPar tfparNode5;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        PCasoSenao pcasosenaoNode7;
        TCFimAvalie tcfimavalieNode8;
        TPontoVirgula tpontovirgulaNode9;
        tcavalieNode2 = (TCAvalie)nodeArrayList1.get(0);
        taparNode3 = (TAPar)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);
        tfparNode5 = (TFPar)nodeArrayList4.get(0);
        {
            // Block
        }
        pcasosenaoNode7 = (PCasoSenao)nodeArrayList5.get(0);
        tcfimavalieNode8 = (TCFimAvalie)nodeArrayList6.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList7.get(0);

        pcomandoNode1 = new AAvalieComando(tcavalieNode2, taparNode3, pexpressaoNode4, tfparNode5, listNode6, pcasosenaoNode7, tcfimavalieNode8, tpontovirgulaNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAavaliecomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TCAvalie tcavalieNode2;
        TAPar taparNode3;
        PExpressao pexpressaoNode4;
        TFPar tfparNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        PCasoSenao pcasosenaoNode8;
        TCFimAvalie tcfimavalieNode9;
        TPontoVirgula tpontovirgulaNode10;
        tcavalieNode2 = (TCAvalie)nodeArrayList1.get(0);
        taparNode3 = (TAPar)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);
        tfparNode5 = (TFPar)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        pcasosenaoNode8 = (PCasoSenao)nodeArrayList6.get(0);
        tcfimavalieNode9 = (TCFimAvalie)nodeArrayList7.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList8.get(0);

        pcomandoNode1 = new AAvalieComando(tcavalieNode2, taparNode3, pexpressaoNode4, tfparNode5, listNode7, pcasosenaoNode8, tcfimavalieNode9, tpontovirgulaNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AEnquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TCEnquanto tcenquantoNode2;
        TAPar taparNode3;
        PExpressaoLogica pexpressaologicaNode4;
        TFPar tfparNode5;
        TCFaca tcfacaNode6;
        PComandos pcomandosNode7;
        TCFimEnquanto tcfimenquantoNode8;
        TPontoVirgula tpontovirgulaNode9;
        tcenquantoNode2 = (TCEnquanto)nodeArrayList1.get(0);
        taparNode3 = (TAPar)nodeArrayList2.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList3.get(0);
        tfparNode5 = (TFPar)nodeArrayList4.get(0);
        tcfacaNode6 = (TCFaca)nodeArrayList5.get(0);
        pcomandosNode7 = (PComandos)nodeArrayList6.get(0);
        tcfimenquantoNode8 = (TCFimEnquanto)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList8.get(0);

        pcomandoNode1 = new AEnquantoComando(tcenquantoNode2, taparNode3, pexpressaologicaNode4, tfparNode5, tcfacaNode6, pcomandosNode7, tcfimenquantoNode8, tpontovirgulaNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce ARepitaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TCRepita tcrepitaNode2;
        PComandos pcomandosNode3;
        TCAte tcateNode4;
        TAPar taparNode5;
        PExpressaoLogica pexpressaologicaNode6;
        TFPar tfparNode7;
        TPontoVirgula tpontovirgulaNode8;
        tcrepitaNode2 = (TCRepita)nodeArrayList1.get(0);
        pcomandosNode3 = (PComandos)nodeArrayList2.get(0);
        tcateNode4 = (TCAte)nodeArrayList3.get(0);
        taparNode5 = (TAPar)nodeArrayList4.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList5.get(0);
        tfparNode7 = (TFPar)nodeArrayList6.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList7.get(0);

        pcomandoNode1 = new ARepitaComando(tcrepitaNode2, pcomandosNode3, tcateNode4, taparNode5, pexpressaologicaNode6, tfparNode7, tpontovirgulaNode8);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AParaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TCPara tcparaNode2;
        TId tidNode3;
        TCDe tcdeNode4;
        TInteiro tinteiroNode5;
        TCAte tcateNode6;
        TInteiro tinteiroNode7;
        TCFaca tcfacaNode8;
        PComandos pcomandosNode9;
        TCFimPara tcfimparaNode10;
        TPontoVirgula tpontovirgulaNode11;
        tcparaNode2 = (TCPara)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tcdeNode4 = (TCDe)nodeArrayList3.get(0);
        tinteiroNode5 = (TInteiro)nodeArrayList4.get(0);
        tcateNode6 = (TCAte)nodeArrayList5.get(0);
        tinteiroNode7 = (TInteiro)nodeArrayList6.get(0);
        tcfacaNode8 = (TCFaca)nodeArrayList7.get(0);
        pcomandosNode9 = (PComandos)nodeArrayList8.get(0);
        tcfimparaNode10 = (TCFimPara)nodeArrayList9.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList10.get(0);

        pcomandoNode1 = new AParaComando(tcparaNode2, tidNode3, tcdeNode4, tinteiroNode5, tcateNode6, tinteiroNode7, tcfacaNode8, pcomandosNode9, tcfimparaNode10, tpontovirgulaNode11);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AParaPassoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TCPara tcparaNode2;
        TId tidNode3;
        TCDe tcdeNode4;
        TInteiro tinteiroNode5;
        TCPasso tcpassoNode6;
        TInteiro tinteiroNode7;
        TCAte tcateNode8;
        TInteiro tinteiroNode9;
        TCFaca tcfacaNode10;
        PComandos pcomandosNode11;
        TCFimPara tcfimparaNode12;
        TPontoVirgula tpontovirgulaNode13;
        tcparaNode2 = (TCPara)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tcdeNode4 = (TCDe)nodeArrayList3.get(0);
        tinteiroNode5 = (TInteiro)nodeArrayList4.get(0);
        tcpassoNode6 = (TCPasso)nodeArrayList5.get(0);
        tinteiroNode7 = (TInteiro)nodeArrayList6.get(0);
        tcateNode8 = (TCAte)nodeArrayList7.get(0);
        tinteiroNode9 = (TInteiro)nodeArrayList8.get(0);
        tcfacaNode10 = (TCFaca)nodeArrayList9.get(0);
        pcomandosNode11 = (PComandos)nodeArrayList10.get(0);
        tcfimparaNode12 = (TCFimPara)nodeArrayList11.get(0);
        tpontovirgulaNode13 = (TPontoVirgula)nodeArrayList12.get(0);

        pcomandoNode1 = new AParaPassoComando(tcparaNode2, tidNode3, tcdeNode4, tinteiroNode5, tcpassoNode6, tinteiroNode7, tcateNode8, tinteiroNode9, tcfacaNode10, pcomandosNode11, tcfimparaNode12, tpontovirgulaNode13);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AVazioSeSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PSeSenao psesenaoNode1;
        {
            // Block

        psesenaoNode1 = new AVazioSeSenao();
        }
	nodeList.add(psesenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce ASenaoSeSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeSenao psesenaoNode1;
        {
            // Block
        TCSenao tcsenaoNode2;
        PComandos pcomandosNode3;
        tcsenaoNode2 = (TCSenao)nodeArrayList1.get(0);
        pcomandosNode3 = (PComandos)nodeArrayList2.get(0);

        psesenaoNode1 = new ASenaoSeSenao(tcsenaoNode2, pcomandosNode3);
        }
	nodeList.add(psesenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce ACasoCaso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaso pcasoNode1;
        {
            // Block
        TCCaso tccasoNode2;
        PValor pvalorNode3;
        TDoisPontos tdoispontosNode4;
        PComandos pcomandosNode5;
        tccasoNode2 = (TCCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        pcomandosNode5 = (PComandos)nodeArrayList4.get(0);

        pcasoNode1 = new ACasoCaso(tccasoNode2, pvalorNode3, tdoispontosNode4, pcomandosNode5);
        }
	nodeList.add(pcasoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AVazioCasoSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PCasoSenao pcasosenaoNode1;
        {
            // Block

        pcasosenaoNode1 = new AVazioCasoSenao();
        }
	nodeList.add(pcasosenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ASenaoCasoSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoSenao pcasosenaoNode1;
        {
            // Block
        TCSenao tcsenaoNode2;
        TDoisPontos tdoispontosNode3;
        PComandos pcomandosNode4;
        tcsenaoNode2 = (TCSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pcomandosNode4 = (PComandos)nodeArrayList3.get(0);

        pcasosenaoNode1 = new ASenaoCasoSenao(tcsenaoNode2, tdoispontosNode3, pcomandosNode4);
        }
	nodeList.add(pcasosenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtribuicao patribuicaoNode1;
        {
            // Block
        TId tidNode2;
        TAtrib tatribNode3;
        PExpressao pexpressaoNode4;
        TPontoVirgula tpontovirgulaNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tatribNode3 = (TAtrib)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        patribuicaoNode1 = new AAtribuicao(tidNode2, tatribNode3, pexpressaoNode4, tpontovirgulaNode5);
        }
	nodeList.add(patribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AAleia1Leia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLeia pleiaNode1;
        {
            // Block
        TCLeia tcleiaNode2;
        TAPar taparNode3;
        PVar pvarNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TFPar tfparNode6;
        TPontoVirgula tpontovirgulaNode7;
        tcleiaNode2 = (TCLeia)nodeArrayList1.get(0);
        taparNode3 = (TAPar)nodeArrayList2.get(0);
        pvarNode4 = (PVar)nodeArrayList3.get(0);
        {
            // Block
        }
        tfparNode6 = (TFPar)nodeArrayList4.get(0);
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList5.get(0);

        pleiaNode1 = new ALeia(tcleiaNode2, taparNode3, pvarNode4, listNode5, tfparNode6, tpontovirgulaNode7);
        }
	nodeList.add(pleiaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AAleia2Leia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLeia pleiaNode1;
        {
            // Block
        TCLeia tcleiaNode2;
        TAPar taparNode3;
        PVar pvarNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TFPar tfparNode7;
        TPontoVirgula tpontovirgulaNode8;
        tcleiaNode2 = (TCLeia)nodeArrayList1.get(0);
        taparNode3 = (TAPar)nodeArrayList2.get(0);
        pvarNode4 = (PVar)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tfparNode7 = (TFPar)nodeArrayList5.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList6.get(0);

        pleiaNode1 = new ALeia(tcleiaNode2, taparNode3, pvarNode4, listNode6, tfparNode7, tpontovirgulaNode8);
        }
	nodeList.add(pleiaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AAescreva1Escreva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEscreva pescrevaNode1;
        {
            // Block
        TCEscreva tcescrevaNode2;
        TAPar taparNode3;
        PExpressao pexpressaoNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TFPar tfparNode6;
        TPontoVirgula tpontovirgulaNode7;
        tcescrevaNode2 = (TCEscreva)nodeArrayList1.get(0);
        taparNode3 = (TAPar)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);
        {
            // Block
        }
        tfparNode6 = (TFPar)nodeArrayList4.get(0);
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList5.get(0);

        pescrevaNode1 = new AEscreva(tcescrevaNode2, taparNode3, pexpressaoNode4, listNode5, tfparNode6, tpontovirgulaNode7);
        }
	nodeList.add(pescrevaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAescreva2Escreva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEscreva pescrevaNode1;
        {
            // Block
        TCEscreva tcescrevaNode2;
        TAPar taparNode3;
        PExpressao pexpressaoNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TFPar tfparNode7;
        TPontoVirgula tpontovirgulaNode8;
        tcescrevaNode2 = (TCEscreva)nodeArrayList1.get(0);
        taparNode3 = (TAPar)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tfparNode7 = (TFPar)nodeArrayList5.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList6.get(0);

        pescrevaNode1 = new AEscreva(tcescrevaNode2, taparNode3, pexpressaoNode4, listNode6, tfparNode7, tpontovirgulaNode8);
        }
	nodeList.add(pescrevaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AMaisExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMaisExpressao pmaisexpressaoNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PExpressao pexpressaoNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList2.get(0);

        pmaisexpressaoNode1 = new AMaisExpressao(tvirgulaNode2, pexpressaoNode3);
        }
	nodeList.add(pmaisexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ATermoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpressaoNode1 = new ATermoExpressao(ptermoNode2);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ASomaExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TSoma tsomaNode3;
        PTermo ptermoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tsomaNode3 = (TSoma)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpressaoNode1 = new ASomaExpressao(pexpressaoNode2, tsomaNode3, ptermoNode4);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ASubExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TSub tsubNode3;
        PTermo ptermoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tsubNode3 = (TSub)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpressaoNode1 = new ASubExpressao(pexpressaoNode2, tsubNode3, ptermoNode4);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AFatorTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new AFatorTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AMultTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TMult tmultNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AMultTermo(ptermoNode2, tmultNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ADivTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TDiv tdivNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new ADivTermo(ptermoNode2, tdivNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AIdFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pfatorNode1 = new AIdFator(tidNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AInteiroFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        pfatorNode1 = new AInteiroFator(tinteiroNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce ARealFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        pfatorNode1 = new ARealFator(trealNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AParentesesFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAPar taparNode2;
        PExpressao pexpressaoNode3;
        TFPar tfparNode4;
        taparNode2 = (TAPar)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList2.get(0);
        tfparNode4 = (TFPar)nodeArrayList3.get(0);

        pfatorNode1 = new AParentesesFator(taparNode2, pexpressaoNode3, tfparNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AExpLogicaExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpsLogicas pexpslogicasNode2;
        pexpslogicasNode2 = (PExpsLogicas)nodeArrayList1.get(0);

        pexpressaologicaNode1 = new AExpLogicaExpressaoLogica(pexpslogicasNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AEExpLogicaExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        TE teNode3;
        PExpsLogicas pexpslogicasNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pexpslogicasNode4 = (PExpsLogicas)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AEExpLogicaExpressaoLogica(pexpressaologicaNode2, teNode3, pexpslogicasNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AOuExpLogicaExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        TOu touNode3;
        PExpsLogicas pexpslogicasNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pexpslogicasNode4 = (PExpsLogicas)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AOuExpLogicaExpressaoLogica(pexpressaologicaNode2, touNode3, pexpslogicasNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AXorExpLogicaExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        TXor txorNode3;
        PExpsLogicas pexpslogicasNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        txorNode3 = (TXor)nodeArrayList2.get(0);
        pexpslogicasNode4 = (PExpsLogicas)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AXorExpLogicaExpressaoLogica(pexpressaologicaNode2, txorNode3, pexpslogicasNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AExpLogicaExpsLogicas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpsLogicas pexpslogicasNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);

        pexpslogicasNode1 = new AExpLogicaExpsLogicas(pexplogicaNode2);
        }
	nodeList.add(pexpslogicasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce ANaoExpLogicaExpsLogicas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpsLogicas pexpslogicasNode1;
        {
            // Block
        TNao tnaoNode2;
        PExpLogica pexplogicaNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExpLogica)nodeArrayList2.get(0);

        pexpslogicasNode1 = new ANaoExpLogicaExpsLogicas(tnaoNode2, pexplogicaNode3);
        }
	nodeList.add(pexpslogicasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AIgualExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TIgual tigualNode3;
        PExpressao pexpressaoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tigualNode3 = (TIgual)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        pexplogicaNode1 = new AIgualExpLogica(pexpressaoNode2, tigualNode3, pexpressaoNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ADifExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TDif tdifNode3;
        PExpressao pexpressaoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tdifNode3 = (TDif)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        pexplogicaNode1 = new ADifExpLogica(pexpressaoNode2, tdifNode3, pexpressaoNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AMenorIgualExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TMenorIgual tmenorigualNode3;
        PExpressao pexpressaoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tmenorigualNode3 = (TMenorIgual)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorIgualExpLogica(pexpressaoNode2, tmenorigualNode3, pexpressaoNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AMaiorIgualExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TMaiorIgual tmaiorigualNode3;
        PExpressao pexpressaoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tmaiorigualNode3 = (TMaiorIgual)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorIgualExpLogica(pexpressaoNode2, tmaiorigualNode3, pexpressaoNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AMenorExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TMenor tmenorNode3;
        PExpressao pexpressaoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tmenorNode3 = (TMenor)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMenorExpLogica(pexpressaoNode2, tmenorNode3, pexpressaoNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AMaiorExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TMaior tmaiorNode3;
        PExpressao pexpressaoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tmaiorNode3 = (TMaior)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        pexplogicaNode1 = new AMaiorExpLogica(pexpressaoNode2, tmaiorNode3, pexpressaoNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AParentesesExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        TAPar taparNode2;
        PExpressaoLogica pexpressaologicaNode3;
        TFPar tfparNode4;
        taparNode2 = (TAPar)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList2.get(0);
        tfparNode4 = (TFPar)nodeArrayList3.get(0);

        pexplogicaNode1 = new AParentesesExpLogica(taparNode2, pexpressaologicaNode3, tfparNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ATerminal$MaisVars */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PMaisVars pmaisvarsNode1;
        pmaisvarsNode1 = (PMaisVars)nodeArrayList1.get(0);
	if(pmaisvarsNode1 != null)
	{
	  listNode2.add(pmaisvarsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ANonTerminal$MaisVars */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PMaisVars pmaisvarsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmaisvarsNode2 = (PMaisVars)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmaisvarsNode2 != null)
	{
	  listNode3.add(pmaisvarsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce ATerminal$Caso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PCaso pcasoNode1;
        pcasoNode1 = (PCaso)nodeArrayList1.get(0);
	if(pcasoNode1 != null)
	{
	  listNode2.add(pcasoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ANonTerminal$Caso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PCaso pcasoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcasoNode2 = (PCaso)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcasoNode2 != null)
	{
	  listNode3.add(pcasoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ATerminal$MaisExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PMaisExpressao pmaisexpressaoNode1;
        pmaisexpressaoNode1 = (PMaisExpressao)nodeArrayList1.get(0);
	if(pmaisexpressaoNode1 != null)
	{
	  listNode2.add(pmaisexpressaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ANonTerminal$MaisExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PMaisExpressao pmaisexpressaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmaisexpressaoNode2 = (PMaisExpressao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmaisexpressaoNode2 != null)
	{
	  listNode3.add(pmaisexpressaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, },
			{{-1, ERROR, 1}, {29, SHIFT, 4}, },
			{{-1, ERROR, 2}, {52, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {3, SHIFT, 5}, {4, SHIFT, 6}, {5, SHIFT, 7}, {6, SHIFT, 8}, },
			{{-1, ERROR, 4}, {1, SHIFT, 14}, },
			{{-1, ERROR, 5}, {29, SHIFT, 15}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 9}, {3, SHIFT, 5}, {4, SHIFT, 6}, {5, SHIFT, 7}, {6, SHIFT, 8}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 12}, {46, SHIFT, 30}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 15}, {30, SHIFT, 31}, {31, SHIFT, 32}, {32, SHIFT, 33}, },
			{{-1, ERROR, 16}, {48, SHIFT, 35}, },
			{{-1, ERROR, 17}, {48, SHIFT, 36}, },
			{{-1, ERROR, 18}, {48, SHIFT, 37}, },
			{{-1, ERROR, 19}, {48, SHIFT, 38}, },
			{{-1, ERROR, 20}, {48, SHIFT, 39}, },
			{{-1, ERROR, 21}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 22}, {29, SHIFT, 41}, },
			{{-1, ERROR, 23}, {43, SHIFT, 42}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 25}, {2, SHIFT, 43}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 21}, },
			{{-1, ERROR, 30}, {29, SHIFT, 45}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 34}, {47, SHIFT, 47}, },
			{{-1, ERROR, 35}, {29, SHIFT, 45}, },
			{{-1, ERROR, 36}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 37}, {25, SHIFT, 56}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 57}, },
			{{-1, ERROR, 38}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 39}, {25, SHIFT, 56}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 57}, },
			{{-1, ERROR, 40}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {20, SHIFT, 64}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 41}, {22, SHIFT, 65}, },
			{{-1, ERROR, 42}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 43}, {44, SHIFT, 67}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 12}, {50, SHIFT, 68}, },
			{{-1, ERROR, 46}, {45, SHIFT, 69}, {47, SHIFT, 70}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 48}, {45, SHIFT, 69}, {49, SHIFT, 73}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 49}, },
			{{-1, ERROR, 52}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 53}, {33, SHIFT, 76}, {34, SHIFT, 77}, {45, SHIFT, 78}, {49, SHIFT, 79}, },
			{{-1, REDUCE, 41}, {35, SHIFT, 82}, {36, SHIFT, 83}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 56}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 57}, },
			{{-1, ERROR, 57}, {25, SHIFT, 56}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 57}, },
			{{-1, ERROR, 58}, {33, SHIFT, 76}, {34, SHIFT, 77}, {37, SHIFT, 87}, {38, SHIFT, 88}, {39, SHIFT, 89}, {40, SHIFT, 90}, {41, SHIFT, 91}, {42, SHIFT, 92}, },
			{{-1, ERROR, 59}, {26, SHIFT, 93}, {27, SHIFT, 94}, {28, SHIFT, 95}, {49, SHIFT, 96}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 55}, },
			{{-1, ERROR, 62}, {33, SHIFT, 76}, {34, SHIFT, 77}, {49, SHIFT, 97}, },
			{{-1, ERROR, 63}, {26, SHIFT, 93}, {27, SHIFT, 94}, {28, SHIFT, 95}, {49, SHIFT, 98}, },
			{{-1, ERROR, 64}, {48, SHIFT, 99}, },
			{{-1, ERROR, 65}, {30, SHIFT, 100}, },
			{{-1, ERROR, 66}, {33, SHIFT, 76}, {34, SHIFT, 77}, {47, SHIFT, 101}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 68}, {30, SHIFT, 102}, },
			{{-1, ERROR, 69}, {29, SHIFT, 45}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 64}, },
			{{-1, ERROR, 72}, {45, SHIFT, 69}, {47, SHIFT, 104}, },
			{{-1, ERROR, 73}, {47, SHIFT, 106}, },
			{{-1, ERROR, 74}, {45, SHIFT, 69}, {49, SHIFT, 107}, },
			{{-1, ERROR, 75}, {33, SHIFT, 76}, {34, SHIFT, 77}, {49, SHIFT, 108}, },
			{{-1, ERROR, 76}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 77}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 78}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 79}, {47, SHIFT, 112}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 81}, {45, SHIFT, 78}, {49, SHIFT, 113}, },
			{{-1, ERROR, 82}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 83}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, REDUCE, 56}, },
			{{-1, ERROR, 85}, {33, SHIFT, 76}, {34, SHIFT, 77}, {37, SHIFT, 87}, {38, SHIFT, 88}, {39, SHIFT, 89}, {40, SHIFT, 90}, {41, SHIFT, 91}, {42, SHIFT, 92}, {49, SHIFT, 108}, },
			{{-1, ERROR, 86}, {26, SHIFT, 93}, {27, SHIFT, 94}, {28, SHIFT, 95}, {49, SHIFT, 117}, },
			{{-1, ERROR, 87}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 88}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 89}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 90}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 91}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 92}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 52}, },
			{{-1, ERROR, 93}, {25, SHIFT, 56}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 57}, },
			{{-1, ERROR, 94}, {25, SHIFT, 56}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 57}, },
			{{-1, ERROR, 95}, {25, SHIFT, 56}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 57}, },
			{{-1, ERROR, 96}, {10, SHIFT, 127}, },
			{{-1, REDUCE, 33}, {11, SHIFT, 128}, {14, SHIFT, 129}, },
			{{-1, ERROR, 98}, {17, SHIFT, 133}, },
			{{-1, ERROR, 99}, {25, SHIFT, 56}, {29, SHIFT, 49}, {30, SHIFT, 50}, {32, SHIFT, 51}, {48, SHIFT, 57}, },
			{{-1, ERROR, 100}, {20, SHIFT, 135}, {24, SHIFT, 136}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 102}, {51, SHIFT, 137}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 107}, {47, SHIFT, 138}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 42}, {35, SHIFT, 82}, {36, SHIFT, 83}, },
			{{-1, REDUCE, 43}, {35, SHIFT, 82}, {36, SHIFT, 83}, },
			{{-1, REDUCE, 40}, {33, SHIFT, 76}, {34, SHIFT, 77}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 113}, {47, SHIFT, 139}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 61}, {33, SHIFT, 76}, {34, SHIFT, 77}, },
			{{-1, REDUCE, 62}, {33, SHIFT, 76}, {34, SHIFT, 77}, },
			{{-1, REDUCE, 59}, {33, SHIFT, 76}, {34, SHIFT, 77}, },
			{{-1, REDUCE, 60}, {33, SHIFT, 76}, {34, SHIFT, 77}, },
			{{-1, REDUCE, 57}, {33, SHIFT, 76}, {34, SHIFT, 77}, },
			{{-1, REDUCE, 58}, {33, SHIFT, 76}, {34, SHIFT, 77}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 54}, },
			{{-1, ERROR, 127}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 128}, {46, SHIFT, 141}, },
			{{-1, ERROR, 129}, {30, SHIFT, 31}, {31, SHIFT, 32}, {32, SHIFT, 33}, },
			{{-1, REDUCE, 66}, },
			{{-1, ERROR, 131}, {15, SHIFT, 143}, },
			{{-1, REDUCE, 33}, {11, SHIFT, 128}, {14, SHIFT, 129}, },
			{{-1, ERROR, 133}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 134}, {26, SHIFT, 93}, {27, SHIFT, 94}, {28, SHIFT, 95}, {49, SHIFT, 147}, },
			{{-1, ERROR, 135}, {30, SHIFT, 148}, },
			{{-1, ERROR, 136}, {30, SHIFT, 149}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 30}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {11, SHIFT, 150}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 141}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 142}, {46, SHIFT, 153}, },
			{{-1, ERROR, 143}, {47, SHIFT, 154}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 145}, {15, SHIFT, 155}, },
			{{-1, ERROR, 146}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {18, SHIFT, 156}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 147}, {47, SHIFT, 157}, },
			{{-1, ERROR, 148}, {17, SHIFT, 158}, },
			{{-1, ERROR, 149}, {20, SHIFT, 159}, },
			{{-1, ERROR, 150}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 151}, {12, SHIFT, 161}, },
			{{-1, REDUCE, 34}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 153}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 155}, {47, SHIFT, 163}, },
			{{-1, ERROR, 156}, {47, SHIFT, 164}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 158}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 159}, {30, SHIFT, 166}, },
			{{-1, REDUCE, 31}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, ERROR, 161}, {47, SHIFT, 167}, },
			{{-1, REDUCE, 32}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 165}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {23, SHIFT, 168}, {29, SHIFT, 23}, },
			{{-1, ERROR, 166}, {17, SHIFT, 169}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 168}, {47, SHIFT, 170}, },
			{{-1, ERROR, 169}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {29, SHIFT, 23}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 171}, {7, SHIFT, 16}, {8, SHIFT, 17}, {9, SHIFT, 18}, {13, SHIFT, 19}, {16, SHIFT, 20}, {19, SHIFT, 21}, {21, SHIFT, 22}, {23, SHIFT, 172}, {29, SHIFT, 23}, },
			{{-1, ERROR, 172}, {47, SHIFT, 173}, },
			{{-1, REDUCE, 29}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 9}, },
			{{-1, 10}, {9, 24}, },
			{{-1, 11}, },
			{{-1, 12}, },
			{{-1, 71}, {72, 105}, {74, 105}, },
			{{-1, 46}, {35, 48}, {69, 103}, },
			{{-1, 13}, },
			{{-1, 34}, {129, 142}, },
			{{-1, 25}, {21, 40}, {127, 140}, {133, 146}, {141, 152}, {150, 160}, {153, 162}, {158, 165}, {169, 171}, },
			{{-1, 26}, {25, 44}, {40, 44}, {140, 44}, {146, 44}, {152, 44}, {160, 44}, {162, 44}, {165, 44}, {171, 44}, },
			{{-1, 151}, },
			{{-1, 130}, {132, 144}, },
			{{-1, 131}, {132, 145}, },
			{{-1, 27}, },
			{{-1, 28}, },
			{{-1, 29}, },
			{{-1, 80}, {81, 114}, },
			{{-1, 58}, {36, 53}, {38, 62}, {42, 66}, {52, 75}, {57, 85}, {78, 111}, {87, 118}, {88, 119}, {89, 120}, {90, 121}, {91, 122}, {92, 123}, },
			{{-1, 54}, {76, 109}, {77, 110}, },
			{{-1, 55}, {82, 115}, {83, 116}, },
			{{-1, 59}, {39, 63}, {57, 86}, {99, 134}, },
			{{-1, 60}, {93, 124}, {94, 125}, {95, 126}, },
			{{-1, 61}, {56, 84}, },
			{{-1, 72}, {48, 74}, },
			{{-1, 132}, },
			{{-1, 81}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: id",
			"expecting: EOF",
			"expecting: 'const', 'real', 'inteiro', 'caractere'",
			"expecting: 'inicio'",
			"expecting: ':'",
			"expecting: 'const', 'real', 'inteiro', 'caractere', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: inteiro, string, real",
			"expecting: '('",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: '<-'",
			"expecting: 'fim', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'fim', 'leia', 'escreva', 'se', 'senao', 'fim se', 'avalie', 'caso', 'fim avalie', 'enquanto', 'fim enquanto', 'repita', 'ate', 'para', 'fim para', id",
			"expecting: ':', ';'",
			"expecting: ';'",
			"expecting: id, inteiro, real, '('",
			"expecting: 'nao', id, inteiro, real, '('",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'ate', 'para', id",
			"expecting: 'de'",
			"expecting: '.'",
			"expecting: ',', ';', ')', '['",
			"expecting: ',', ';'",
			"expecting: ',', ')'",
			"expecting: 'e', 'ou', 'xor', '+', '-', '*', '/', '<', '>', '<=', '>=', '=', '<>', ',', ';', ')'",
			"expecting: '+', '-', ',', ')'",
			"expecting: '+', '-', '<', '>', '<=', '>=', '=', '<>'",
			"expecting: 'e', 'ou', 'xor', ')'",
			"expecting: '+', '-', ')'",
			"expecting: inteiro",
			"expecting: '+', '-', ';'",
			"expecting: ',', ';', ')'",
			"expecting: '+', '-', '<', '>', '<=', '>=', '=', '<>', ')'",
			"expecting: 'entao'",
			"expecting: 'senao', 'caso', 'fim avalie'",
			"expecting: 'faca'",
			"expecting: 'ate', 'passo'",
			"expecting: ']'",
			"expecting: 'e', 'ou', 'xor', '+', '-', ')'",
			"expecting: 'fim avalie'",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'fim se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'fim enquanto', 'repita', 'para', id",
			"expecting: 'ate'",
			"expecting: 'fim se'",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'fim avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'fim se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'avalie', 'caso', 'fim avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', 'fim para', id",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 1, 5, 5, 5, 6, 6, 6, 5, 6, 3, 7, 8, 8, 8, 8, 8, 9, 1, 10, 6, 11, 12, 12, 12, 12, 1, 13, 13, 13, 14, 1, 15, 16, 15, 16, 17, 18, 15, 19, 12, 20, 21, 6, 22, 23, 23, 23, 15, 24, 23, 23, 15, 16, 25, 26, 26, 26, 27, 26, 8, 28, 29, 2, 28, 1, 6, 30, 21, 14, 22, 27, 15, 15, 15, 14, 22, 22, 15, 15, 26, 31, 26, 15, 15, 15, 15, 15, 15, 16, 16, 16, 32, 33, 34, 16, 35, 12, 36, 30, 6, 30, 12, 14, 23, 23, 23, 24, 12, 14, 22, 23, 23, 26, 37, 37, 37, 37, 37, 37, 26, 26, 26, 9, 5, 7, 33, 38, 33, 9, 26, 28, 28, 30, 12, 12, 39, 9, 5, 14, 33, 38, 40, 14, 34, 41, 9, 42, 43, 9, 12, 14, 14, 12, 9, 28, 44, 14, 45, 12, 12, 46, 34, 12, 14, 9, 12, 46, 14, 12, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
