/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.portugol.node;

import src.portugol.analysis.*;

@SuppressWarnings("nls")
public final class AVarDeclaracao extends PVarDeclaracao
{
    private PTipo _tipo_;
    private TDoisPontos _doisPontos_;
    private PVarLista _varLista_;

    public AVarDeclaracao()
    {
        // Constructor
    }

    public AVarDeclaracao(
        @SuppressWarnings("hiding") PTipo _tipo_,
        @SuppressWarnings("hiding") TDoisPontos _doisPontos_,
        @SuppressWarnings("hiding") PVarLista _varLista_)
    {
        // Constructor
        setTipo(_tipo_);

        setDoisPontos(_doisPontos_);

        setVarLista(_varLista_);

    }

    @Override
    public Object clone()
    {
        return new AVarDeclaracao(
            cloneNode(this._tipo_),
            cloneNode(this._doisPontos_),
            cloneNode(this._varLista_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVarDeclaracao(this);
    }

    public PTipo getTipo()
    {
        return this._tipo_;
    }

    public void setTipo(PTipo node)
    {
        if(this._tipo_ != null)
        {
            this._tipo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipo_ = node;
    }

    public TDoisPontos getDoisPontos()
    {
        return this._doisPontos_;
    }

    public void setDoisPontos(TDoisPontos node)
    {
        if(this._doisPontos_ != null)
        {
            this._doisPontos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._doisPontos_ = node;
    }

    public PVarLista getVarLista()
    {
        return this._varLista_;
    }

    public void setVarLista(PVarLista node)
    {
        if(this._varLista_ != null)
        {
            this._varLista_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varLista_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tipo_)
            + toString(this._doisPontos_)
            + toString(this._varLista_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tipo_ == child)
        {
            this._tipo_ = null;
            return;
        }

        if(this._doisPontos_ == child)
        {
            this._doisPontos_ = null;
            return;
        }

        if(this._varLista_ == child)
        {
            this._varLista_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tipo_ == oldChild)
        {
            setTipo((PTipo) newChild);
            return;
        }

        if(this._doisPontos_ == oldChild)
        {
            setDoisPontos((TDoisPontos) newChild);
            return;
        }

        if(this._varLista_ == oldChild)
        {
            setVarLista((PVarLista) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
