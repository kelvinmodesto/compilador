/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.node;

import java.util.*;
import portugol.analysis.*;

@SuppressWarnings("nls")
public final class ADeclaracao extends PDeclaracao
{
    private final LinkedList<PVarDeclaracao> _varDeclaracao_ = new LinkedList<PVarDeclaracao>();
    private final LinkedList<PConstDeclaracao> _constDeclaracao_ = new LinkedList<PConstDeclaracao>();

    public ADeclaracao()
    {
        // Constructor
    }

    public ADeclaracao(
        @SuppressWarnings("hiding") List<?> _varDeclaracao_,
        @SuppressWarnings("hiding") List<?> _constDeclaracao_)
    {
        // Constructor
        setVarDeclaracao(_varDeclaracao_);

        setConstDeclaracao(_constDeclaracao_);

    }

    @Override
    public Object clone()
    {
        return new ADeclaracao(
            cloneList(this._varDeclaracao_),
            cloneList(this._constDeclaracao_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclaracao(this);
    }

    public LinkedList<PVarDeclaracao> getVarDeclaracao()
    {
        return this._varDeclaracao_;
    }

    public void setVarDeclaracao(List<?> list)
    {
        for(PVarDeclaracao e : this._varDeclaracao_)
        {
            e.parent(null);
        }
        this._varDeclaracao_.clear();

        for(Object obj_e : list)
        {
            PVarDeclaracao e = (PVarDeclaracao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._varDeclaracao_.add(e);
        }
    }

    public LinkedList<PConstDeclaracao> getConstDeclaracao()
    {
        return this._constDeclaracao_;
    }

    public void setConstDeclaracao(List<?> list)
    {
        for(PConstDeclaracao e : this._constDeclaracao_)
        {
            e.parent(null);
        }
        this._constDeclaracao_.clear();

        for(Object obj_e : list)
        {
            PConstDeclaracao e = (PConstDeclaracao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._constDeclaracao_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._varDeclaracao_)
            + toString(this._constDeclaracao_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._varDeclaracao_.remove(child))
        {
            return;
        }

        if(this._constDeclaracao_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PVarDeclaracao> i = this._varDeclaracao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PVarDeclaracao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<PConstDeclaracao> i = this._constDeclaracao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PConstDeclaracao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
