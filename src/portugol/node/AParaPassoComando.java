/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.node;

import portugol.analysis.*;

@SuppressWarnings("nls")
public final class AParaPassoComando extends PComando
{
    private TCPara _cPara_;
    private TId _id_;
    private TCDe _cDe_;
    private TInteiro _de_;
    private TCPasso _cPasso_;
    private TInteiro _passo_;
    private TCAte _cAte_;
    private TInteiro _ate_;
    private TCFaca _cFaca_;
    private PComandos _comandos_;
    private TCFimPara _cFimPara_;
    private TPontoVirgula _pontoVirgula_;

    public AParaPassoComando()
    {
        // Constructor
    }

    public AParaPassoComando(
        @SuppressWarnings("hiding") TCPara _cPara_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TCDe _cDe_,
        @SuppressWarnings("hiding") TInteiro _de_,
        @SuppressWarnings("hiding") TCPasso _cPasso_,
        @SuppressWarnings("hiding") TInteiro _passo_,
        @SuppressWarnings("hiding") TCAte _cAte_,
        @SuppressWarnings("hiding") TInteiro _ate_,
        @SuppressWarnings("hiding") TCFaca _cFaca_,
        @SuppressWarnings("hiding") PComandos _comandos_,
        @SuppressWarnings("hiding") TCFimPara _cFimPara_,
        @SuppressWarnings("hiding") TPontoVirgula _pontoVirgula_)
    {
        // Constructor
        setCPara(_cPara_);

        setId(_id_);

        setCDe(_cDe_);

        setDe(_de_);

        setCPasso(_cPasso_);

        setPasso(_passo_);

        setCAte(_cAte_);

        setAte(_ate_);

        setCFaca(_cFaca_);

        setComandos(_comandos_);

        setCFimPara(_cFimPara_);

        setPontoVirgula(_pontoVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AParaPassoComando(
            cloneNode(this._cPara_),
            cloneNode(this._id_),
            cloneNode(this._cDe_),
            cloneNode(this._de_),
            cloneNode(this._cPasso_),
            cloneNode(this._passo_),
            cloneNode(this._cAte_),
            cloneNode(this._ate_),
            cloneNode(this._cFaca_),
            cloneNode(this._comandos_),
            cloneNode(this._cFimPara_),
            cloneNode(this._pontoVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParaPassoComando(this);
    }

    public TCPara getCPara()
    {
        return this._cPara_;
    }

    public void setCPara(TCPara node)
    {
        if(this._cPara_ != null)
        {
            this._cPara_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cPara_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TCDe getCDe()
    {
        return this._cDe_;
    }

    public void setCDe(TCDe node)
    {
        if(this._cDe_ != null)
        {
            this._cDe_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cDe_ = node;
    }

    public TInteiro getDe()
    {
        return this._de_;
    }

    public void setDe(TInteiro node)
    {
        if(this._de_ != null)
        {
            this._de_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._de_ = node;
    }

    public TCPasso getCPasso()
    {
        return this._cPasso_;
    }

    public void setCPasso(TCPasso node)
    {
        if(this._cPasso_ != null)
        {
            this._cPasso_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cPasso_ = node;
    }

    public TInteiro getPasso()
    {
        return this._passo_;
    }

    public void setPasso(TInteiro node)
    {
        if(this._passo_ != null)
        {
            this._passo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._passo_ = node;
    }

    public TCAte getCAte()
    {
        return this._cAte_;
    }

    public void setCAte(TCAte node)
    {
        if(this._cAte_ != null)
        {
            this._cAte_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cAte_ = node;
    }

    public TInteiro getAte()
    {
        return this._ate_;
    }

    public void setAte(TInteiro node)
    {
        if(this._ate_ != null)
        {
            this._ate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ate_ = node;
    }

    public TCFaca getCFaca()
    {
        return this._cFaca_;
    }

    public void setCFaca(TCFaca node)
    {
        if(this._cFaca_ != null)
        {
            this._cFaca_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cFaca_ = node;
    }

    public PComandos getComandos()
    {
        return this._comandos_;
    }

    public void setComandos(PComandos node)
    {
        if(this._comandos_ != null)
        {
            this._comandos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comandos_ = node;
    }

    public TCFimPara getCFimPara()
    {
        return this._cFimPara_;
    }

    public void setCFimPara(TCFimPara node)
    {
        if(this._cFimPara_ != null)
        {
            this._cFimPara_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cFimPara_ = node;
    }

    public TPontoVirgula getPontoVirgula()
    {
        return this._pontoVirgula_;
    }

    public void setPontoVirgula(TPontoVirgula node)
    {
        if(this._pontoVirgula_ != null)
        {
            this._pontoVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._cPara_)
            + toString(this._id_)
            + toString(this._cDe_)
            + toString(this._de_)
            + toString(this._cPasso_)
            + toString(this._passo_)
            + toString(this._cAte_)
            + toString(this._ate_)
            + toString(this._cFaca_)
            + toString(this._comandos_)
            + toString(this._cFimPara_)
            + toString(this._pontoVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._cPara_ == child)
        {
            this._cPara_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._cDe_ == child)
        {
            this._cDe_ = null;
            return;
        }

        if(this._de_ == child)
        {
            this._de_ = null;
            return;
        }

        if(this._cPasso_ == child)
        {
            this._cPasso_ = null;
            return;
        }

        if(this._passo_ == child)
        {
            this._passo_ = null;
            return;
        }

        if(this._cAte_ == child)
        {
            this._cAte_ = null;
            return;
        }

        if(this._ate_ == child)
        {
            this._ate_ = null;
            return;
        }

        if(this._cFaca_ == child)
        {
            this._cFaca_ = null;
            return;
        }

        if(this._comandos_ == child)
        {
            this._comandos_ = null;
            return;
        }

        if(this._cFimPara_ == child)
        {
            this._cFimPara_ = null;
            return;
        }

        if(this._pontoVirgula_ == child)
        {
            this._pontoVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._cPara_ == oldChild)
        {
            setCPara((TCPara) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._cDe_ == oldChild)
        {
            setCDe((TCDe) newChild);
            return;
        }

        if(this._de_ == oldChild)
        {
            setDe((TInteiro) newChild);
            return;
        }

        if(this._cPasso_ == oldChild)
        {
            setCPasso((TCPasso) newChild);
            return;
        }

        if(this._passo_ == oldChild)
        {
            setPasso((TInteiro) newChild);
            return;
        }

        if(this._cAte_ == oldChild)
        {
            setCAte((TCAte) newChild);
            return;
        }

        if(this._ate_ == oldChild)
        {
            setAte((TInteiro) newChild);
            return;
        }

        if(this._cFaca_ == oldChild)
        {
            setCFaca((TCFaca) newChild);
            return;
        }

        if(this._comandos_ == oldChild)
        {
            setComandos((PComandos) newChild);
            return;
        }

        if(this._cFimPara_ == oldChild)
        {
            setCFimPara((TCFimPara) newChild);
            return;
        }

        if(this._pontoVirgula_ == oldChild)
        {
            setPontoVirgula((TPontoVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
